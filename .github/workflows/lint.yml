name: Linting
on:
  pull_request:

permissions:
  checks: write
  pull-requests: write

jobs:

  rust-files:
      runs-on: ubuntu-latest
      outputs:
        any_changed: ${{ steps.changed-rust-files.outputs.any_changed }}
      steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed rust files
        id: changed-rust-files
        uses: tj-actions/changed-files@v19
        with:
          files: |
            **/*.rs
            Cargo.toml
            Cargo.lock

  security-audit:
    needs: rust-files
    if: needs.rust-files.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: mkdir -p $HOME/.cargo
      - run: cp .github/workflows/.cargo/audit.toml $HOME/.cargo
      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  rustfmt:
    needs: rust-files
    if: needs.rust-files.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add rustfmt
      - run: cargo fmt --version
      - run: cargo fmt -- --check # Prints diff in the action logs
      - if: failure()
        run: echo "::error ::You need to run `rustfmt` loaclly, commit the changes, and push"

  clippy:
    needs: rust-files
    if: needs.rust-files.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup component add clippy
      - run: cargo clippy --version
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- --deny warnings

  license-header:
    needs: rust-files
    if: needs.rust-files.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: viperproject/check-license-header@v1
        with:
          path: .
          config: .github/license-check/config.json

  inclusive-lint:
    needs: rust-files
    if: needs.rust-files.outputs.any_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Woke for Inclusive Linting
        run: |
            curl -sSfL https://git.io/getwoke | bash -s --
            bin/woke --exit-1-on-failure
        shell: bash

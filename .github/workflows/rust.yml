name: Rust

on:
  push:
    branches: [ main ]
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
        matrix:
            os: [macos-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install openssl on macOS
      if: runner.os == 'macOS'
      run: |
        brew install openssl
    
    - run: cargo build --workspace --verbose --locked --release
    - run: cargo test --workspace --verbose

    # save the pyrsia_node binary for the package creation
    - name: Save pyrsia_node binary
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: pyrsia_node
        path: target/release/pyrsia_node
        if-no-files-found: error

    # save the pyrsia binary for the package creation
    - name: Save pyrsia binary
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: pyrsia
        path: target/release/pyrsia
        if-no-files-found: error

    # save the debian control files to be used with the deb packager
    - name: Save debian control file
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: DEBIAN
        path: installers/DEBIAN
        if-no-files-found: error
    
      # build synapse-bt 1.0 from github (commit:634ee2a62 = 1.0 tag)
    - name: Build synapse 
      if: runner.os == 'Linux'
      run: |
        cargo install --force --git https://github.com/Luminarys/synapse.git#634ee2a62 synapse-bt
        cp ~/.cargo/bin/synapse target/release/synapse
      shell: bash

    # save the debian control files to be used with the deb packager
    - name: Save synapse binary
      uses: actions/upload-artifact@v2
      if: runner.os == 'Linux'
      with:
        name: synapse
        path: target/release/synapse
        if-no-files-found: error

  # Create the .deb file, add it to the apt repo and
  # push the changes to the website github repo
  apt-package:
      needs: [build]
      runs-on: ubuntu-latest
      steps:

      # grab the pyrsia_node from the build step
      - name: Fetch pyrsia_node binary
        uses: actions/download-artifact@v2
        with:
          name: pyrsia_node
          path: target/release

      # grab the pyrsia from the build step
      - name: Fetch pyrsia binary
        uses: actions/download-artifact@v2
        with:
          name: pyrsia
          path: target/release

      # grab the control file from the build step
      - name: Fetch debian control file
        uses: actions/download-artifact@v2
        with:
          name: DEBIAN
          path: pyrsia/DEBIAN

      # grab the synapse from the build step
      - name: Fetch synapse binary
        uses: actions/download-artifact@v2
        with:
          name: synapse
          path: target/release

      # create the pyrsia.deb file
      - name:  Package for apt-get
        run: |
            mkdir -p pyrsia/usr/local/bin
            cp target/release/pyrsia_node pyrsia/usr/local/bin
            cp target/release/pyrsia pyrsia/usr/local/bin
            cp target/release/synapse pyrsia/usr/local/bin
            chmod 755 pyrsia/usr/local/bin/pyrsia_node
            chmod 755 pyrsia/usr/local/bin/pyrsia
            chmod 755 pyrsia/usr/local/bin/synapse
            echo "Installed-Size: $(echo "$(stat -c%s pyrsia/usr/local/bin/pyrsia) + $(stat -c%s pyrsia/usr/local/bin/pyrsia_node)" | bc)" >> pyrsia/DEBIAN/control
            sed -i.bak "/Version:/s/\$/-$GITHUB_RUN_NUMBER/" pyrsia/DEBIAN/control
            cat pyrsia/DEBIAN/control
            dpkg-deb --build pyrsia
            ls -la pyrsia.deb
        shell: bash

      # add the prysia.deb file to the apt repo which is part of
      # the github website repo
      - uses: sbtaylor15/apt-repo-action@v2.0.4
        # Only when we push on the main repository should we upload the results
        if: github.repository_owner == 'pyrsia' && github.event_name == 'push'
        with:
          github_token: ${{ secrets.APT }}
          repo_supported_version: |
            bionic
          repo_supported_arch: |
            amd64
          page_branch: gh-pages
          file: /github/workspace/pyrsia.deb
          file_target_version: bionic
          public_key: ${{ secrets.GPG_PUBLIC }}
          private_key: ${{ secrets.GPG_PRIVATE }}
          key_passphrase: ${{ secrets.GPG_SECRET }}
          github_repository: pyrsia/website

  coverage:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Run cargo-tarpaulin
      uses: actions-rs/tarpaulin@v0.1
      with:
        args: '-- --test-threads 1'

    - name: Upload to codecov.io
      uses: codecov/codecov-action@v2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        fail_ci_if_error: ${{ github.repository_owner == 'pyrsia' }}
  
  docker:
    runs-on: ubuntu-latest
    needs: [apt-package]
    if: github.repository_owner == 'pyrsia' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Docker Image for Pyrsia Node
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        file: installers/docker/AptGet.Dockerfile
        tags: pyrsiaoss/pyrsia-node:latest

    - name: Only build if CodeCoverage.Dockerfile changed
      uses: tj-actions/changed-files@v13.1
      id: changed-files

    - name: Build and Push Code Coverage Base Image
      if: contains(steps.changed-files.outputs.all_changed_and_modified_files, 'CodeCoverage.Dockerfile')
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        file: installers/docker/CodeCoverage.Dockerfile
        tags: pyrsiaoss/codecoverage:1.0
